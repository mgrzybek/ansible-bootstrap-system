---

###############################################################################
# Checks
#
- name: Check htpdate and htpdate exclusiveness
  fail: msg="htpdate et ntpdate cannot be used together"
  run_once: true
  when:
    - bootstrap_htpdate_servers | length > 0
    - bootstrap_ntpdate_servers | length > 0

- name: Check syslog remote target
  fail: msg="a syslog remote target must be given if local logs are purged"
  run_once: true
  when:
    - bootstrap_syslog_disable_local_storage | lower == 'true'
    - bootstrap_syslog_target_host | length == 0

###############################################################################
# Facts
#
- name: Set default local facts
  set_fact:
    configure_git_http: false
    configure_git_https: false
    configure_pip: false
    configure_cargo: false
    configure_rsyslog: false
    configure_syslog_ng: false
    configure_hostname: false
    configure_htp: false
    configure_ntp: false
    purge_local_logs: false

- name: Check git binary
  tags: bootstrap-git
  block:
    - name: Check git presence
      shell: which git || exit 0
      register: git_result

    - name: Set local fact for git (https)
      set_fact:
        configure_git_https: true
      when:
        - git_result.stdout.find('git') > -1 or "git" in bootstrap_distro_packages
        - bootstrap_https_proxy_git != None
        - bootstrap_https_proxy_git | length > 8

    - name: Set local fact for git (http)
      set_fact:
        configure_git_http: true
      when:
        - git_result.stdout.find('git') > -1 or "git" in bootstrap_distro_packages
        - bootstrap_http_proxy_git != None
        - bootstrap_http_proxy_git | length > 8

- name: Check pip binary
  tags: bootstrap-pip
  block:
    - name: Check pip and virtualenv presence
      shell: (which virtualenv || which pip) 2>&1 >/dev/null && echo ok || exit 0
      register: pip_result

    - name: Check pip presence
      set_fact:
        configure_pip: true
      when:
        - pip_result.stdout.find('ok') > -1
        - bootstrap_http_proxy_pip != None
        - bootstrap_http_proxy_pip | length > 8

- name: Check cargo binary
  tags: bootstrap-cargo
  block:
    - name: Check cargo presence
      shell: which cargo || exit 0
      register: cargo_result

    - name: Set local fact for cargo
      set_fact:
        configure_cargo: true
      when:
        - cargo_result.stdout.find('cargo') > -1
        - bootstrap_http_proxy_cargo != None
        - bootstrap_http_proxy_cargo | length > 0

- name: Check rsyslog service
  tags: bootstrap-rsyslog
  block:
    - name: Check rsyslog presence
      shell: which rsyslogd || exit 0
      register: rsyslog_result

    - name: Set local fact for rsyslog
      set_fact:
        configure_rsyslog: true
      when:
        - bootstrap_syslog_target_host != None
        - rsyslog_result.stdout.find('rsyslogd') > -1

    - name: Set local fact for local logs
      set_fact:
        purge_local_logs: true
      when:
        - bootstrap_syslog_target_host != None
        - bootstrap_syslog_disable_local_storage | lower == 'true'
        - rsyslog_result.stdout.find('rsyslogd') > -1

- name: Check syslog-ng service
  tags: bootstrap-syslog-ng
  block:
    - name: Check syslog-ng presence
      shell: which syslog-ng || exit 0
      register: syslog_ng_result

    - name: Set local fact for syslog-ng
      set_fact:
        configure_syslog_ng: true
      when:
        - bootstrap_syslog_target_host != None
        - syslog_ng_result.stdout.find('syslog-ng') > -1

    - name: Set local fact for local logs
      set_fact:
        purge_local_logs: true
      when:
        - bootstrap_syslog_target_host != None
        - bootstrap_syslog_disable_local_storage | lower == 'true'
        - syslog_ng_result.stdout.find('syslog-ng') > -1

- name: Set local fact for hostname configuration
  when:
    - bootstrap_set_hostname_from_inventory | lower == 'true'
    - bootstrap_hostname != 'localhost'
  set_fact:
    configure_hostname: true

- name: Set local fact for htp
  when: bootstrap_htpdate_servers | length > 0
  set_fact:
    configure_htp: true

- name: Set local fact for ntp
  when: bootstrap_ntpdate_servers | length > 0
  set_fact:
    configure_ntp: true

###############################################################################
# Proxies and repositories
# TODO: set proxy for specific remote repo
#
- name: HTTP proxy configuration for apt
  template: src=99proxy.j2 dest=/etc/apt/apt.conf.d/99proxy
  when: ansible_os_family | lower == 'debian'
  tags: bootstrap-proxy-package

- name: HTTP configuration for yum
  when: ansible_os_family | lower == 'redhat'
  block:
    - name: Set yum's proxy
      when:
        - bootstrap_http_proxy_packages != None
        - bootstrap_http_proxy_packages is search('http')
      ini_file:
        path: /etc/yum.conf
        section: main
        option: proxy
        no_extra_spaces: yes
        value: "{{ bootstrap_http_proxy_packages }}"
      tags: bootstrap-proxy-package

    - name: Set yum's timeout
      ini_file:
        path: /etc/yum.conf
        section: main
        option: timeout
        no_extra_spaces: yes
        value: "{{ bootstrap_yum_timeout }}"
      tags: bootstrap-repo-timeout

    - name: Set fatestmirror preferences (include)
      ini_file:
        path: /etc/yum/pluginconf.d/fastestmirror.conf
        state: present
        section: main
        option: include_only
        value: "{{ bootstrap_fastestmirror.include_only|join(',') }}"
      when: bootstrap_fastestmirror.include_only|length > 0
      tags: bootstrap-repo-package

    - name: Set fatestmirror preferences (exclude)
      when:
        - bootstrap_fastestmirror.exclude | length > 0
      tags: bootstrap-repo-package
      ini_file:
        path: /etc/yum/pluginconf.d/fastestmirror.conf
        state: present
        section: main
        option: exclude
        value: "{{ bootstrap_fastestmirror.exclude|join(',') }}"

    - name: set yum's repositories
      with_items: "{{ bootstrap_yum_repos }}"
      tags: bootstrap-repo-package
      yum_repository:
        name: "{{ item.name }}"
        description: "{{ item.description | default('') }}"
        file: "{{ item.file }}"
        baseurl: "{{ item.baseurl }}"
        state: "{{ item.state | default('present') }}"

###############################################################################
# /etc/hosts configuration
# Might be useful for the next steps

- name: /etc/hosts configuration
  when: bootstrap_static_hosts | length > 0
  lineinfile:
    path: /etc/hosts
    state: present
    line: "{{ item.ip }}    {{ item.hosts | join(' ') }}"
    regexp: "^{{ item.ip }}"
